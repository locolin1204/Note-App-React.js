{"version":3,"sources":["components/Note.js","components/AddNote.js","components/NotesList.js","components/Search.js","components/Header.js","App.js","index.js"],"names":["Note","_ref","id","text","date","handleDeleteNote","react_default","a","createElement","className","index_esm","size","onClick","AddNote","handleAddNote","_useState","useState","_useState2","Object","slicedToArray","noteText","setNoteText","rows","cols","placeholder","value","onChange","event","target","length","trim","NotesList","notes","map","note","components_Note","components_AddNote","Search","handleSearchNote","type","Header","handleToggleDarkMode","previousDarkMode","App","nanoid","setNotes","_useState3","_useState4","darkMode","setDarkMode","_useState5","_useState6","searchText","setSearchText","useEffect","localStorage","setItem","JSON","stringify","concat","components_Header","components_Search","components_NotesList","filter","toLowerCase","includes","Date","newNote","toLocaleDateString","newNotes","toConsumableArray","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.df7314bc.chunk.js","sourcesContent":["import React from 'react';\nimport {MdDeleteForever} from \"react-icons/md\";\n\n\nconst Note = ({ id, text, date, handleDeleteNote }) => {\n    return(\n        <div className=\"note\">\n            <span>{text}</span>\n            <div className=\"note-footer\">\n                <small>{date}</small>\n                <MdDeleteForever\n                    className = \"delete-icon\"\n                    size = \"1.3em\"\n                    onClick={ () => handleDeleteNote(id) }\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default Note;\n","import React, { useState } from 'react';\nconst AddNote = ( {handleAddNote} )  => {\n    const [noteText, setNoteText] = useState(\"\");\n    const characterLimit = 200;\n\n    const handleChange = (event) => {\n        if(characterLimit - event.target.value.length >= 0)\n            setNoteText(event.target.value);\n    };\n\n    const handleSaveCLick = () => {\n        if(noteText.trim().length > 0){\n            handleAddNote(noteText);\n            setNoteText(\"\");\n        }\n    }\n    return(\n    <div className=\"note new\">\n        <textarea \n        rows=\"8\"\n        cols=\"10\"\n        placeholder=\"Type to add a note...\"\n        value = {noteText}\n        onChange={handleChange}\n        ></textarea>\n        <div className=\"note-footer\">\n            <small>{characterLimit-noteText.length} Remaining</small>\n            <button className=\"save\" onClick={handleSaveCLick}>Save</button>\n        </div>\n    </div>\n    )\n}\n\nexport default AddNote;","import React from 'react';\nimport Note from \"./Note\";\nimport AddNote from \"./AddNote\";\n\n\nconst NotesList = ({ notes, handleAddNote, handleDeleteNote }) => {\n    return (\n    <div className=\"notes-list\">\n        {notes.map((note)=>(\n        <Note \n            id={note.id}\n            text={note.text}\n            date={note.date}\n            handleDeleteNote = {handleDeleteNote}\n        />\n        ))}\n        <AddNote handleAddNote={handleAddNote} />\n    </div>\n    );\n}\n\nexport default NotesList;","import React from 'react';\nimport { MdSearch } from 'react-icons/md';\n\n\nconst Search = ({ handleSearchNote }) => {\n    return (\n    <div className=\"search\">\n        <MdSearch\n            className=\"search-icons\"\n            size=\"1.3em\"\n        />\n        <input \n            type=\"text\" \n            placeholder=\"Type to search...\"\n            onChange={(event) => {\n                handleSearchNote(event.target.value)\n            }} \n        />\n    </div>\n    );\n}\n\nexport default Search;","import React from \"react\";\n\nconst Header = ({ handleToggleDarkMode }) => {\n    return(\n        <div className=\"header\" >\n            <h1>Notes</h1>\n            <button \n                onClick={() => {\n                    handleToggleDarkMode(\n                            (previousDarkMode) => !previousDarkMode\n                        )\n                    }\n                }\n                className=\"toggle\"\n                >\n                Toggle Mode\n                </button>\n        </div>\n    )\n}\n\nexport default Header;","import React, { useEffect, useState } from 'react';\nimport { nanoid } from 'nanoid'\nimport NotesList from './components/NotesList';\nimport Search from './components/Search';\nimport Header from './components/Header';\n\nconst App = () => {\n  const [notes, setNotes] = useState([\n    {\n    id: nanoid(),\n    text: \"This is my first note!\",\n    date: \"15/04/2022\",\n    },\n    {\n      id: nanoid(),\n      text: \"This is my second note!\",\n      date: \"15/04/2022\",\n    },\n    {\n      id: nanoid(),\n      text: \"This is my third note!\",\n      date: \"29/04/2022\",\n    },\n    {\n      id: nanoid(),\n      text: \"This is my final note!\",\n      date: \"30/04/2022\",\n    },\n]);\n  const[darkMode, setDarkMode] = useState(false);\n\n  const [searchText, setSearchText] = useState(\"\");\n\n  useEffect(() => {\n    localStorage.setItem(\"react-notes-app-data\", JSON.stringify(notes));\n  }, [notes]);\n  \n  const addNote = (text) => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString(),\n    }\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  }\n\n\n  const deleteNote = (id) => {\n    const newNotes = notes.filter((note) => note.id !== id);\n    setNotes(newNotes);\n  }\n\n\n  return (\n    <div className={`${darkMode && \"dark-mode\"}`}>\n      <div className=\"container\">\n      <Header handleToggleDarkMode = {setDarkMode} />\n      <Search handleSearchNote = {setSearchText} />\n      <NotesList \n        notes={notes.filter((note) => note.text.toLowerCase().includes(searchText.toLowerCase()))}\n        handleAddNote = {addNote}\n        handleDeleteNote = {deleteNote}\n      />\n      </div>\n    </div>\n  )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}