{"version":3,"sources":["components/Note.js","components/AddNote.js","components/NotesList.js","components/Search.js","components/Header.js","App.js","index.js"],"names":["Note","_ref","id","text","date","handleDeleteNote","react_default","a","createElement","className","index_esm","size","onClick","AddNote","handleAddNote","_useState","useState","_useState2","Object","slicedToArray","noteText","setNoteText","rows","cols","placeholder","value","onChange","event","target","length","trim","NotesList","notes","map","note","components_Note","components_AddNote","Search","handleSearchNote","type","Header","handleToggleDarkMode","previousDarkMode","App","nanoid","setNotes","_useState3","_useState4","searchText","setSearchText","_useState5","_useState6","darkMode","setDarkMode","useEffect","savedNotes","JSON","parse","localStorage","getItem","console","log","setItem","stringify","concat","components_Header","components_Search","components_NotesList","filter","toLowerCase","includes","Date","newNote","toLocaleDateString","newNotes","toConsumableArray","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.322c3b68.chunk.js","sourcesContent":["import React from 'react';\nimport {MdDeleteForever} from \"react-icons/md\";\n\n\nconst Note = ({ id, text, date, handleDeleteNote }) => {\n    return(\n        <div className=\"note\">\n            <span>{text}</span>\n            <div className=\"note-footer\">\n                <small>{date}</small>\n                <MdDeleteForever\n                    className = \"delete-icon\"\n                    size = \"1.3em\"\n                    onClick={ () => handleDeleteNote(id) }\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default Note;\n","import React, { useState } from 'react';\nconst AddNote = ( {handleAddNote} )  => {\n    const [noteText, setNoteText] = useState(\"\");\n    const characterLimit = 200;\n\n    const handleChange = (event) => {\n        if(characterLimit - event.target.value.length >= 0)\n            setNoteText(event.target.value);\n    };\n\n    const handleSaveCLick = () => {\n        if(noteText.trim().length > 0){\n            handleAddNote(noteText);\n            setNoteText(\"\");\n        }\n    }\n    return(\n    <div className=\"note new\">\n        <textarea \n        rows=\"8\"\n        cols=\"10\"\n        placeholder=\"Type to add a note...\"\n        value = {noteText}\n        onChange={handleChange}\n        ></textarea>\n        <div className=\"note-footer\">\n            <small>{characterLimit-noteText.length} Remaining</small>\n            <button className=\"save\" onClick={handleSaveCLick}>Save</button>\n        </div>\n    </div>\n    )\n}\n\nexport default AddNote;","import React from 'react';\nimport Note from \"./Note\";\nimport AddNote from \"./AddNote\";\n\n\nconst NotesList = ({ notes, handleAddNote, handleDeleteNote }) => {\n    return (\n    <div className=\"notes-list\">\n        {notes.map((note)=>(\n        <Note \n            id={note.id}\n            text={note.text}\n            date={note.date}\n            handleDeleteNote = {handleDeleteNote}\n        />\n        ))}\n        <AddNote handleAddNote={handleAddNote} />\n    </div>\n    );\n}\n\nexport default NotesList;","import React from 'react';\nimport { MdSearch } from 'react-icons/md';\n\n\nconst Search = ({ handleSearchNote }) => {\n    return (\n    <div className=\"search\">\n        <MdSearch\n            className=\"search-icons\"\n            size=\"1.3em\"\n        />\n        <input \n            type=\"text\" \n            placeholder=\"Type to search...\"\n            onChange={(event) => {\n                handleSearchNote(event.target.value)\n            }} \n        />\n    </div>\n    );\n}\n\nexport default Search;","import React from \"react\";\n\nconst Header = ({ handleToggleDarkMode }) => {\n    return(\n        <div className=\"header\" >\n            <h1>Notes</h1>\n            <button \n                onClick={() => {\n                    handleToggleDarkMode(\n                            (previousDarkMode) => !previousDarkMode\n                        )\n                    }\n                }\n                className=\"toggle\"\n                >\n                Toggle Mode\n                </button>\n        </div>\n    )\n}\n\nexport default Header;","import { useState, useEffect } from 'react';\nimport React from 'react';\nimport { nanoid } from 'nanoid';\nimport NotesList from './components/NotesList';\nimport Search from './components/Search';\nimport Header from './components/Header';\n\nconst App = () => {\n\tconst [notes, setNotes] = useState([\n\t\t{\n\t\t\tid: nanoid(),\n\t\t\ttext: 'This is my first note!',\n\t\t\tdate: '15/04/2021',\n\t\t},\n\t\t{\n\t\t\tid: nanoid(),\n\t\t\ttext: 'This is my second note!',\n\t\t\tdate: '21/04/2021',\n\t\t},\n\t\t{\n\t\t\tid: nanoid(),\n\t\t\ttext: 'This is my third note!',\n\t\t\tdate: '28/04/2021',\n\t\t},\n\t\t{\n\t\t\tid: nanoid(),\n\t\t\ttext: 'This is my new note!',\n\t\t\tdate: '30/04/2021',\n\t\t},\n\t]);\n\n\tconst [searchText, setSearchText] = useState('');\n\n\tconst [darkMode, setDarkMode] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst savedNotes = JSON.parse(\n\t\t\tlocalStorage.getItem('react-notes-app-data')\n\t\t);\n\n\t\tif (savedNotes) {\n\t\t\tsetNotes(savedNotes);\n      console.log(\"hihi\");\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(\n\t\t\t'react-notes-app-data',\n\t\t\tJSON.stringify(notes)\n\t\t);\n\t}, [notes]);\n\n\tconst addNote = (text) => {\n\t\tconst date = new Date();\n\t\tconst newNote = {\n\t\t\tid: nanoid(),\n\t\t\ttext: text,\n\t\t\tdate: date.toLocaleDateString(),\n\t\t};\n\t\tconst newNotes = [...notes, newNote];\n\t\tsetNotes(newNotes);\n\t};\n\n\tconst deleteNote = (id) => {\n\t\tconst newNotes = notes.filter((note) => note.id !== id);\n\t\tsetNotes(newNotes);\n\t};\n\n\treturn (\n\t\t<div className={`${darkMode && 'dark-mode'}`}>\n\t\t\t<div className='container'>\n\t\t\t\t<Header handleToggleDarkMode={setDarkMode} />\n\t\t\t\t<Search handleSearchNote={setSearchText} />\n\t\t\t\t<NotesList\n\t\t\t\t\tnotes={notes.filter((note) =>\n\t\t\t\t\t\tnote.text.toLowerCase().includes(searchText)\n\t\t\t\t\t)}\n\t\t\t\t\thandleAddNote={addNote}\n\t\t\t\t\thandleDeleteNote={deleteNote}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n    <App />\n);\n\n"],"sourceRoot":""}